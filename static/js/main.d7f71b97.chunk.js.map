{"version":3,"sources":["Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","activePage","onPageChange","toNextPage","toPrevPage","pageQuantity","Math","ceil","startItemsRange","endItemsRange","pagesArr","Array","from","keys","map","num","className","type","disabled","onClick","page","hidden","classNames","App","state","setState","onPerPageChange","event","Number","target","value","this","htmlFor","name","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAaaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAeC,KAAKC,KAAKR,EAAQC,GACjCQ,EAAkBR,GAAWC,EAAa,GAAK,EAC/CQ,EAAgBJ,IAAiBJ,EAAaF,EAAQE,EAAaD,EACnEU,EAAWC,MAAMC,KAAKD,MAAMN,GAAcQ,QAAQC,KAAI,SAAAC,GAAG,OAAIA,EAAM,KAEzE,OACE,sBAAKC,UAAU,MAAf,UACE,uCAAQR,EAAR,cAA6BC,EAA7B,eAAiDV,KAEjD,qBAAIiB,UAAU,aAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,SAAyB,IAAfjB,EACVkB,QAASf,EAJX,oBAUDM,EAASI,KAAI,SAAAM,GAAI,OAChB,sCACIA,IAASnB,EAAa,GAAKmB,IAASnB,EAAa,IACjD,oBAAIe,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,4DAIVK,OAAQD,IAASnB,EAAa,EAC1BA,EAAa,EACbA,GAAcI,EAAe,EARnC,kBADoCe,GAgBxC,oBAAIJ,UAAU,mBAAd,SACE,wBACEC,KAAK,SAELD,UAAWM,IACT,0BACA,CAAE,kCAAmCF,IAASnB,IAEhDoB,OACW,IAATD,GACGA,IAASnB,GACTmB,IAASnB,EAAa,GACtBmB,IAASnB,EAAa,GACtBmB,EAAOf,EAEZc,QAAS,kBAAMjB,EAAakB,IAd9B,SAgBGA,GAdIA,WAoBb,oBAAIJ,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,SAAUjB,IAAeI,EACzBc,QAAShB,EAJX,2BC3EGoB,G,MAAb,4MACEC,MAAe,CACbzB,MAAO,GACPC,QAAS,EACToB,KAAM,GAJV,EAOEjB,WAAa,WACX,EAAKsB,UAAS,SAAAD,GAAK,MAAK,CACtBJ,KAAMI,EAAMJ,KAAO,OATzB,EAaEhB,WAAa,WACX,EAAKqB,UAAS,SAAAD,GAAK,MAAK,CACtBJ,KAAMI,EAAMJ,KAAO,OAfzB,EAmBElB,aAAe,SAACkB,GACd,EAAKK,SAAS,CAAEL,UApBpB,EAuBEM,gBAAkB,SAACC,GACjB,EAAKF,SAAS,CACZzB,QAAS4B,OAAOD,EAAME,OAAOC,OAC7BV,KAAM,KA1BZ,4CA8BE,WACE,MAAiCW,KAAKP,MAA9BzB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASoB,EAAxB,EAAwBA,KAExB,OACE,sBAAKJ,UAAU,MAAf,UACE,4CACA,8BACE,wBAAOgB,QAAQ,UAAf,+BAEE,yBACEC,KAAK,UACLC,GAAG,UACHJ,MAAO9B,EACPmC,SAAUJ,KAAKL,gBAJjB,UAME,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,wBAKN,cAAC,EAAD,CACE/B,MAAOA,EACPC,QAASA,EACTC,WAAYmB,EACZlB,aAAc6B,KAAK7B,aACnBC,WAAY4B,KAAK5B,WACjBC,WAAY2B,KAAK3B,oBA3D3B,GAAyBgC,IAAMC,YCP/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d7f71b97.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  activePage: number;\n  onPageChange: (page: number) => void;\n  toNextPage: () => void;\n  toPrevPage: () => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  activePage,\n  onPageChange,\n  toNextPage,\n  toPrevPage,\n}) => {\n  const pageQuantity = Math.ceil(total / perPage);\n  const startItemsRange = perPage * (activePage - 1) + 1;\n  const endItemsRange = pageQuantity === activePage ? total : activePage * perPage;\n  const pagesArr = Array.from(Array(pageQuantity).keys()).map(num => num + 1);\n\n  return (\n    <nav className=\"nav\">\n      <h3>{`${startItemsRange} - ${endItemsRange} of ${total}`}</h3>\n\n      <ul className=\"pagination\">\n        <li className=\"pagination__page\">\n          <button\n            type=\"button\"\n            className=\"pagination__page-button\"\n            disabled={activePage === 1}\n            onClick={toPrevPage}\n          >\n            &laquo;\n          </button>\n        </li>\n\n        {pagesArr.map(page => (\n          <>\n            {(page === activePage - 2 || page === activePage + 2) && (\n              <li className=\"pagination__page\" key={page}>\n                <button\n                  type=\"button\"\n                  className=\"\n                    pagination__page-button\n                    pagination__page-button--spread\n                  \"\n                  hidden={page === activePage - 2\n                    ? activePage < 4\n                    : activePage >= pageQuantity - 2}\n                >\n                  ...\n                </button>\n              </li>\n            )}\n\n            <li className=\"pagination__page\">\n              <button\n                type=\"button\"\n                key={page}\n                className={classNames(\n                  'pagination__page-button',\n                  { 'pagination__page-button--active': page === activePage },\n                )}\n                hidden={\n                  page !== 1\n                  && page !== activePage\n                  && page !== activePage + 1\n                  && page !== activePage - 1\n                  && page < pageQuantity\n                }\n                onClick={() => onPageChange(page)}\n              >\n                {page}\n              </button>\n            </li>\n          </>\n        ))}\n\n        <li className=\"pagination__page\">\n          <button\n            type=\"button\"\n            className=\"pagination__page-button\"\n            disabled={activePage === pageQuantity}\n            onClick={toNextPage}\n          >\n            &raquo;\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Pagination } from './Pagination/Pagination';\nimport './App.css';\n\ntype State = {\n  total: number;\n  perPage: number;\n  page: number;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  };\n\n  toNextPage = () => {\n    this.setState(state => ({\n      page: state.page + 1,\n    }));\n  };\n\n  toPrevPage = () => {\n    this.setState(state => ({\n      page: state.page - 1,\n    }));\n  };\n\n  onPageChange = (page: number) => {\n    this.setState({ page });\n  };\n\n  onPerPageChange = (event: { target: { value: string } }) => {\n    this.setState({\n      perPage: Number(event.target.value),\n      page: 1,\n    });\n  };\n\n  render() {\n    const { total, perPage, page } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>Pagination</h1>\n        <div>\n          <label htmlFor=\"perPage\">\n            Items per page&nbsp;\n            <select\n              name=\"perPage\"\n              id=\"perPage\"\n              value={perPage}\n              onChange={this.onPerPageChange}\n            >\n              <option value=\"3\">3</option>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n            </select>\n          </label>\n        </div>\n\n        <Pagination\n          total={total}\n          perPage={perPage}\n          activePage={page}\n          onPageChange={this.onPageChange}\n          toNextPage={this.toNextPage}\n          toPrevPage={this.toPrevPage}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}